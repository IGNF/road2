openapi: "3.0.0"

info:
  description: "Description de l'API d'administration de Road2."
  version: "1.0.0"
  title: "Administration de Road2"
  contact:
    email: "contact.geoservices@ign.fr"
    
servers:
  - url: "https://localhost:8079/admin/1.0.0/"
    description: "Serveur de test local"
    
tags:
- name: "État du serveur"
  description: "Connaître l'état de l'instance globale (administrateur et services)"
- name: "Gestion de l'administrateur"
  description: "Administrer l'administrateur"
- name: "Gestion des services"
  description: "Administrer des services"
- name: "Gestion des ressources"
  description: "Administrer les ressources sur un service spécifique."
- name: "Gestion des sources"
  description: "Administrer les sources sur un service spécifique."

paths:

  /version:
    get: 
      tags: 
      - "État du serveur"
      summary: "Obtenir la version du serveur."
      description: |
        Cette requête retourne la version de Road2 utilisée par cette instance 
        de l'administrateur.
      operationId: "version"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  version:
                    type: "string"
                    description: "Version de Road2 utilisée"
                    
  /health:
    get: 
      tags: 
      - "État du serveur"
      summary: "Obtenir l'état du serveur."
      description: |
        Cette requête retourne l'état du serveur d'administration et 
        de l'ensemble des services qu'il administre. Cet état fait principalement 
        référence à la disponibilité des données. Chaque service a un état lié à la 
        disponibilité de ses ressources. Chaque ressource a un état lié à la 
        dispoinibilité de ses sources. Et chaque source, celle de ses données. 
      operationId: "health"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  state:
                    type: string
                    enum: ["green","yellow","red"]
                    description: |
                      Lorsque tout va bien: 'green'. Si un des services a 
                      un problème:yellow. Si aucun service n'est disponible:red."
           
  /configuration:
    get:
      tags:
      - "Gestion de l'administrateur"
      summary: "Obtenir la configuration de l'administrateur."
      description: |
        Cette requête retourne la configuration de l'administrateur.
      operationId: "get-admin-configuration"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
    patch:
      tags:
      - "Gestion de l'administrateur"
      summary: "Modifier la configuration de l'administrateur."
      description: | 
        Dans la configuration de l'administrateur, tout est modifiable. 
        Cela permet notamment de créer, modifier et supprimer les services 
        gérés par cet administrateur. 
      operationId: "patch-admin-configuration"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                
  /services:
    get: 
      tags: 
      - "Gestion des services"
      summary: "Obtenir la liste des services proposés par l'administrateur"
      description: | 
        Cette requête retourne l'ensemble des services connus par l'administrateur. 
        Cette liste peut être vide si aucun service n'a été configuré.
      operationId: "services"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  services:
                    type: "array"
                    items:
                      type: "string"
    post:
      tags:
      - "Gestion des services"
      summary: "Créer un service."
      description: |
        Si un service n'existe pas, il est possible de le créer 
        en fournissant sa configuration. 
      operationId: "post-service"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                      
  /services/{service}:
    get:
      tags:
      - "Gestion des services"
      summary: "Obtenir la configuration d'un service."
      description: |
        Cette requête retourne la configuration du service demandé.
      operationId: "get-service"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    patch:
      tags:
      - "Gestion des services"
      summary: "Modifier la configuration d'un service existant."
      description: |
        Il s'agit de modifier des paramètres de configuration d'un service 
        déjà existant. Il faut fournir la configuration du service à modifier.
        Si un redémarrage du service est nécessaire, il sera de fait 
        temporairement indisponible.
      operationId: "patch-service"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    delete:
      tags:
      - "Gestion des services"
      summary: "Supprimer un service."
      description: | 
        Pour supprimer un service, il sera nécessaire d'avoir d'abord 
        supprimé les sources et ressources associées. Une fois supprimés, 
        un service et sa configuration ne peuvent être récupérés. 
      operationId: "delete-service"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                
  /services/{service}/resources:
    get:
      tags:
      - "Gestion des ressources"
      summary: "Obtenir la liste des ressources proposées par un service."
      description: |
        Cette requête retourne la liste des ressources sur le service indiqué.
      operationId: "get-resources"
      parameters:
      - name: "service"
        in: "path"
        description: "Id du service concerné"
        required: true
        schema:
          type: "string"
      - name: "source"
        description: |
          Filtre pour avoir les ressources qui utilisent cette source
        in: "query"
        required: false
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  resources:
                    type: "array"
                    items:
                      type: "string"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    post:
      tags:
      - "Gestion des ressources"
      summary: "Intégrer une nouvelle ressource. Il faut fournir la configuration de la ressource à intégrer."
      description: "Les sources indiquées doivent déjà exister."
      operationId: "post-resource"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                      
  /services/{service}/resources/{resource}:
    get:
      tags:
      - "Gestion des ressources"
      summary: "Obtenir la configuration d'une ressource."
      description: "Cette requête retourne la configuration d'une ressource."
      operationId: "get-resource"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resource"
        in: "path"
        description: "Id de la ressource concernée"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    patch:
      tags:
      - "Gestion des ressources"
      summary: "Modifier une ressource existante. Il faut fournir la configuration de la ressource à modifier."
      description: "Les sources indiquées doivent déjà exister."
      operationId: "patch-resource"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resource"
        in: "path"
        description: "Id de la ressource concernée"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    delete:
      tags:
      - "Gestion des ressources"
      summary: "Supprimer une ressource. Il faut fournir l'id de la ressource à supprimer."
      description: ""
      operationId: "delete-resource"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resource"
        in: "path"
        description: "Id de la ressource concernée"
        required: true
        schema:
          type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                
  /services/{service}/sources:
    get:
      tags:
      - "Gestion des sources"
      summary: "Obtenir la liste des sources proposées par un service."
      description: "Cette requête retourne la liste des sources sur le service indiqué."
      operationId: "get-sources"
      parameters:
      - name: "service"
        in: "path"
        description: "Id du service concerné"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  resources:
                    type: "array"
                    items:
                      type: "string"
    post:
      tags:
      - "Gestion des sources"
      summary: "Intégrer une nouvelle source. Il faut fournir la configuration de la source à intégrer."
      description: "La donnée doit déjà exister."
      operationId: "post-source"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        201:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                      
  /services/{service}/sources/{source}:
    get:
      tags:
      - "Gestion des sources"
      summary: "Obtenir la configuration d'une source."
      description: "Cette requête retourne la configuration d'une source déjà existante."
      operationId: "get-source"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "source"
        in: "path"
        description: "Id de la source concernée"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    patch:
      tags:
      - "Gestion des sources"
      summary: "Modifier une source existante. Il faut fournir la configuration de la source à modifier."
      description: "La donnée doit déjà exister."
      operationId: "patch-source"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "source"
        in: "path"
        description: "Id de la source concernée"
        required: true
        schema:
          type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
      responses:
        200:
          description: "successful operation"
          content:
            application/json:
              schema:
                type: "object"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
    delete:
      tags:
      - "Gestion des sources"
      summary: "Surpprimer une source. Il faut fournir l'id de la source à supprimer."
      description: | 
        La suppression de la donnée doit être faite autrement. 
        On doit avoir supprimé son usage dans les ressources avant.
      operationId: "delete-source"
      parameters:
      - name: "service"
        description: "Id du service concerné"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "source"
        in: "path"
        description: "Id de la source concernée"
        required: true
        schema:
          type: "string"
      responses:
        204:
          description: "successful operation"
        400:
          description: "Invalid parameters"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
        404:
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorResponse"
                
components:
  schemas:
    errorResponse:
      type: "object"
      properties:
        error:
          type: "object"
          properties:
            errorType:
              type: "string"
            message:
              type: "string"
