# Description d'un fichier de configuration de ressource OSRM

# Une ressource est un objet qui contient toutes les informations utiles pour que l'application puisse diffuser ses services.
"resource":
	type: object
  required: true
	properties:
    # Id de la ressource. C'est l'id qui apparaîtra dans le getcap et sera utilisé pour les requêtes.
		"id":
			type: string
      required: true
    # Type de la ressource: osmr ou pgr. Selon le type, différentes informations seront alors attendues.
		"type":
			type: string
      required: true
			enum: ["osrm"]
    # Description de la ressource qui apparaîtra dans le getcap.
		"description":
			type: string
      required: true
    # Une ressource correspond à une topologie et plusieurs calculs de coûts (qui seront dans les sources).
		"topology":
			type: object
      required: true
			properties:
        # Description de la topologie. Permet de savoir sur quelle topologie se base cette ressource. Cela est utile pour l'utilisateur et l'administrateur.
				"description":
					type: string
          required: true
        # Bbox dans laquelle les requêtes seront autorisées. Cette bbox doit être exprimée dans la projection d'origine des données.
        "bbox":
          type: string
          required: true
        # Projection de diffusion par défaut
        "projection":
          type: string
          required: true
        # Permet de savoir où est stocké la topologie utilisée. Cela est utile uniquement pour l'administrateur.
        "storage":
					$ref: "#/components/schemas/storage"
          required: false
        # Projection d'origine des données
        "projection":
          type: string
          required: true
    # Liste des sources permettants de construire la ressource.
		"sources":
			type: array
      required: true
			minItems: 1
			items:
				type: object
				properties:
          # Id de la source
					"id":
						type: string
            required: true
          # Type de la source
					"type":
						type: string
            required: true
          # Le storage indique ou se trouve le fichier .osrm (ce peut être un fichier ou un objet ceph)
					"storage":
						$ref: "#/components/schemas/storage"
            required: true
          # A chaque .osrm correspond un coût, soit un mode de déplacement et une optimisation combinée.
					"cost":
						type: object
            required: true
						properties:
              # Mode de déplacement
							"profile":
								type: string
                required: true
              # Optimisation
							"optimization":
								type: string
                required: true
              # Indique où se trouve le fichier .lua qui a permis de générer le .osrm
							"compute":
								type: object
                required: false
								properties:
									"storage":
										$ref: "#/components/schemas/storage"
                    required: true
                  # Indique ou se trouve le fichier json qui a permis de générer le lua
                  "configuration":
                    type: object
                    required: false
                    properties:
                      # Nom de la propriété qui est utilisé dans le fichier json
                      "name":
                        type: string
                        required: true
                      "storage":
                        $ref: "#/components/schemas/storage"
                        required: true
    # Liste des opérations rendus disponibles
		"availableOperations":
			type: array
      required: true
			minItems: 1
      uniqueItems: true
			items:
        type: object
        properties:
          # Id de l'opération
          "id":
            type: string
          # Tableau des parametres de l'opération
          "parameters":
            type: array
            items:
              type: object
              properties:
                # Id du paramètre
                "id":
                  type: string
                  required: true
                # Valeur par défaut
                "defaultValueContent":
                  type: string
                  required: false
                # Valeurs possibles
                "values":
                  required: false
                  type:
                    oneOf:
                      - array
                      - string
                      - object
components:
  schemas:
    # storage d'un document: fichier ou ceph
  	"storage":
  		type: object
  		properties:
        # Fichier
				- "file":
						type: string
            required: false
