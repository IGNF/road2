# Description d'un fichier des ressources OSRM pour Road2


# Information sur la ressource générée. La plupart de ces informations permettront de générer le fichier de ressource utilisable par l'application de calcul d'itinéraire.
"resource":
  type: object
  required: true
  properties:	
    # Id de la ressource
    "id":
      type: string
      required: true
    # Type de la ressource, osrm dans ce cas
    "type":
      type: string
      required: true
    # Description de la ressource
    "description":
      type: string
      required: true
    # Version de la ressource. C'est généralement la date de génération de cette ressource. 
    "resourceVersion"
      type: "string"
      required: true
    # Informations sur la topologie de la ressource
    "topology":
      type: object
      required: true
      properties:
        # id de la topologie, utile pour la charger une seule fois dans Road2
        "id":
          type: string
          required: true
        # Type de la topologie
        "type":
          type: string
          required: true
        # Description de la topologie
        "description":
          type: string
          required: true
        # Stockage de la topologie
        "storage":
          $ref: "#/components/schemas/storage"
          required: true
        # Projection des données sources
        "projection":
          type: string
          required: true
        # Bbox des données de la topologie, pas nécessairement la même que pour la ressource 
        "bbox":
          type: string
          required: true 
    # Liste des sources qui vont être générées 
    "sources":
      type: array 
      required: true
      minItems: 1
      items:
        type: object
        properties:
          # id de la source, utile pour la charger une seule fois dans Road2.  
          "id":
            type: string
            required: true
          # Type de la source, ici ce doit être osrm
          "type":
            type: string
            required: true
          # Stockage de la source, du .osrm en l'occurence
          "storage":
            $ref: "#/components/schemas/storage"
            required: true
          # Coûts calculés sur la topologie précisée précedemment. On peut en avoir plusieurs. 
          "cost":
            type: object
            required: true
            properties:
                # Chaque coût correspond à un profil
                "profile":
                  type: string
                  required: true
                # Chaque coût correspond à un profil
                "optmization":
                  type: string
                  required: true
                # Fichier permettant de calculer le coût
                "compute":
                  type: object
                  required: true
                  properties:
                    # Stockage du fichier permettant de calculer le coût
                    "storage":
                      $ref: "#/components/schemas/storage"
                # Configuration pour le calcul des couts 
                "configuration":
                  type: object 
                  required: false 
                  properties:
                    # Nom du coût dans le fichier de configuration 
                    "name":
                      type: string 
                      required: true
                    # Stockage du fichier de calcul des couts. C'est un JSON. 
                    "storage":
                      $ref: "#/components/schemas/storage"
    # Informations sur les opérations autorisées sur la ressource qui va être générée. 
    "availableOperations":
      type: array
      required: true
      minItems: 1
      items:
        # Id de l'opération
        "id":
          type: string 
          required: true 
        # Paramètres de l'opération 
        "parameters":
          type: array
          required: true
          items:
            type: object 
            properties:
              # Id du parametre
              "id":
                type: string
                required: true
              # Valeur par défaut possible pour ce parametre
              "defaultValueContent":
                type: string 
                required: false 
              # Valeurs possibles pour ce parametre
              "values":
                type: string or array or object 
                required: true
				
components:
  schemas:
    # storage d'un document: fichier ou ceph
  	"storage":
  		type: object
  		properties:
        	# Fichier 
  			"file":
  				type: string
            	required: false